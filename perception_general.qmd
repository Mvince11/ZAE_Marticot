---
title: ""
format:
  dashboard:
    orientation: rows
editor: visual
expandable: true
layout: "grid"
scrolling: true
---

```{r setup, include=FALSE}
# Chargement des packages
library(tidyverse)
library(readr)

# Lecture du fichier CSV
donnees <- read_csv("data/results-survey337264.csv", show_col_types = FALSE)%>%
  drop_na(`Date de soumission`)
```

<h1 class="test" style="font-size:1.4em;">Volet Perception générale</h1>

## Row {height="20%"}

```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

library(dplyr)
library(tidyr)
library(ggplot2)

# On sélectionne uniquement les colonnes qui t'intéressent
df_notes <- donnees %>%
  select(
    Attractive = `Dans quelle mesure trouvez-vous la zone d’activité de Marticot :Donnez une note de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Attractive]`,
    Conviviale = `Dans quelle mesure trouvez-vous la zone d’activité de Marticot :Donnez une note de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Conviviale]`,
    "Accessible en transport" = `Dans quelle mesure trouvez-vous la zone d’activité de Marticot :Donnez une note de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Accessible en transports]`,
    Isolee = `Dans quelle mesure trouvez-vous la zone d’activité de Marticot :Donnez une note de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Isolée]`,
    Obsolete = `Dans quelle mesure trouvez-vous la zone d’activité de Marticot :Donnez une note de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Obsolète]`
  ) %>%
  pivot_longer(cols = everything(), names_to = "Critere", values_to = "Note") %>%
  filter(!is.na(Note))   # supprimer les NA

# Compter le nombre de réponses par critère et par note
df_plot <- df_notes %>%
  group_by(Critere, Note) %>%
  summarise(N = n(), .groups = "drop")

# Graphique : barres empilées
ggplot(df_plot, aes(x = Critere, y = N, fill = factor(Note))) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_brewer(palette = "RdYlGn", direction = 1) +
  geom_text(aes(label = N), 
            position = position_stack(vjust = 0.5), 
            color = "black", size = 1) +
  labs(
    title = "Perception de la zone d’activité de Marticot",
    x = "",
    y = "Nombre de réponses",
    fill = "Note"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(color = "red", size = 4, face = "bold", hjust = 0.5),
        axis.text.x = element_text( hjust = 0.5, size = 4),
        axis.title.x = element_text(size = 2),  # Titre axe X
        axis.title.y = element_text(size = 4),  # Titre axe Y
        axis.text.y = element_text(size = 4),     # Valeurs axe Y
        legend.text = element_text(size = 3),        # Taille du texte de la légende
        legend.title = element_text(size = 4),        # Taille du titre de la légende
        legend.key.size = unit(0.3, "cm"),        # Taille des cases de la légende
        legend.spacing.y = unit(0.1, "cm")        # Espacement vertical réduit
        )
```



```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

donnees %>%
  count(`Ressentez-vous des nuisances dans la zone d’activité de Marticot ?`) %>%
  ggplot(aes(x = reorder(`Ressentez-vous des nuisances dans la zone d’activité de Marticot ?`, n), y = n, fill = `Ressentez-vous des nuisances dans la zone d’activité de Marticot ?`)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  labs(title = "Ressentez-vous des nuisances", x = "réponse", y = "Nombre de réponses") +
  theme(plot.title = element_text(color = "red", size = 4, face = "bold", hjust = 0.5),
        axis.text.x = element_text( hjust = 0.5, size = 4),
        axis.title.x = element_text(size = 4),  # Titre axe X
        axis.title.y = element_text(size = 4),  # Titre axe Y
        axis.text.y = element_text(size = 4),     # Valeurs axe Y
        legend.text = element_text(size = 3),        # Taille du texte de la légende
        legend.title = element_text(size = 4),        # Taille du titre de la légende
        legend.key.size = unit(0.3, "cm"),        # Taille des cases de la légende
        legend.spacing.y = unit(0.1, "cm")        # Espacement vertical réduit
        )
```

## Row {height="20%}

```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)

# On sélectionne uniquement les colonnes qui t'intéressent
nuisances_notes <- donnees %>%
  select(
    Bruit = `Si oui, lesquelles ?  Veuillez cocher une ou plusieurs réponse  [Bruit]`,
    "Circulation poids lourds"= `Si oui, lesquelles ?  Veuillez cocher une ou plusieurs réponse  [Circulation de poids lourds]`,
    "Trafic routier" = `Si oui, lesquelles ?  Veuillez cocher une ou plusieurs réponse  [Trafic routier]`,
    Odeurs = `Si oui, lesquelles ?  Veuillez cocher une ou plusieurs réponse  [Odeurs]`
  ) %>%
  pivot_longer(cols = everything(), names_to = "Critere", values_to = "Note") %>%
  mutate(
    Note = case_when(
      is.na(Note) | Note == "N/A" ~ "Sans réponse",
      Note %in% c("Non", "FALSE") ~ "Non",
      Note %in% c("Oui", "TRUE") ~ "Oui",
      TRUE ~ as.character(Note)
    )
  )

df_nuis <- nuisances_notes %>%
  group_by(Critere, Note) %>%
  summarise(N = n(), .groups = "drop")

p2 <- ggplot(df_nuis, aes(
    x = Critere, y = N, fill = factor(Note),
    text = paste(
      "Critère :", Critere,
      "<br>Réponse :", Note,
      "<br>Nombre de réponses :", N
    )
  )) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_brewer(palette = "RdYlGn", direction = 1) +
  labs(
    title = "Origines des nuisances",
    x = "", y = "Nombre de réponses", fill = "Note"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(color = "red", size = 8, face = "bold", hjust = 0.5),
    axis.text.x = element_text(hjust = 0.5, size = 7),
    axis.title.y = element_text(size = 8),
    axis.text.y = element_text(size = 7),
    legend.text = element_text(size = 7),
    legend.title = element_text(size = 7),
    legend.key.size = unit(0.8, "cm"),
    legend.spacing.y = unit(0.1, "cm")
  )

ggplotly(p2, tooltip = "text") 
  
```

```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

library(dplyr)
library(tidyr)
library(ggplot2)

# On sélectionne uniquement les colonnes qui t'intéressent
nuisances_notes <- donnees %>%
  select(
    Autres = `Si oui, lesquelles ?  Veuillez cocher une ou plusieurs réponse  [Autre]`
  ) %>%
  pivot_longer(cols = everything(), names_to = "Critere", values_to = "Note") %>%
  filter(!is.na(Note))   # supprimer les NA

# Compter le nombre de réponses par critère et par note
df_plot <- nuisances_notes %>%
  group_by(Critere, Note) %>%
  summarise(N = n(), .groups = "drop")

# Graphique : barres empilées
ggplot(df_plot, aes(x = Critere, y = N, fill = factor(Note))) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_brewer(palette = "RdYlGn", direction = 1) +
  geom_text(aes(label = N), 
            position = position_stack(vjust = 0.5), 
            color = "black", size = 1) +
  labs(
    title = "Origines des nuisances - Autres",
    x = "",
    y = "Nombre de réponses",
    fill = "Note"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(color = "red", size = 4, face = "bold", hjust = 0.5),
        axis.text.x = element_text( hjust = 0.5, size = 4),
        axis.title.x = element_text(size = 2),  # Titre axe X
        axis.title.y = element_text(size = 4),  # Titre axe Y
        axis.text.y = element_text(size = 4),     # Valeurs axe Y
        legend.text = element_text(size = 3),        # Taille du texte de la légende
        legend.title = element_text(size = 4),        # Taille du titre de la légende
        legend.key.size = unit(0.3, "cm"),        # Taille des cases de la légende
        legend.spacing.y = unit(0.1, "cm")        # Espacement vertical réduit
        )
```

## Column { expandable="false" }
```{=html}
Plus de 200 personnes n'ont pas répondu à cette question
```

## Row {height="20%}

```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 3

library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)

# Préparation des données
caracterisation_notes <- donnees %>%
  select(
    "Ses espaces de convivialité" = `Selon vous, la zone d’activité de Marticot est caractérisée par :Donnez une note en cochant de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Ses espaces de convivialité]`,
    "Ses services"= `Selon vous, la zone d’activité de Marticot est caractérisée par :Donnez une note en cochant de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Ses services (équipements sportifs, restauration, supermarchés…)]`,
    "Sa propreté et son bon entretien" = `Selon vous, la zone d’activité de Marticot est caractérisée par :Donnez une note en cochant de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Sa propreté et son bon entretien]`,
    "La sécurité" = `Selon vous, la zone d’activité de Marticot est caractérisée par :Donnez une note en cochant de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [La sécurité (de ses biens et des personnes)]`,
    "Ses cheminements piétons" = `Selon vous, la zone d’activité de Marticot est caractérisée par :Donnez une note en cochant de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Ses cheminements piétons]`,
    "Son réseau internet" = `Selon vous, la zone d’activité de Marticot est caractérisée par :Donnez une note en cochant de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Son réseau internet]`,
    "Ses espaces verts" = `Selon vous, la zone d’activité de Marticot est caractérisée par :Donnez une note en cochant de 1 à 6, 1 correspondant à « pas du tout » et 6 « tout à fait » [Ses espaces verts]`
  ) %>%
  pivot_longer(cols = everything(), names_to = "Critere", values_to = "Note") %>%
  filter(!is.na(Note))%>%
  mutate(Note = factor(
    Note,
    levels = 1:6,
    labels = c("1 = Pas du tout", "2", "3", "4", "5", "6 = Tout à fait")
  ))

# Comptage des réponses par critère/note
df_plot <- caracterisation_notes %>%
  group_by(Critere, Note) %>%
  summarise(N = n(), .groups = "drop")%>%
  group_by(Critere) %>%
  mutate(
    Total = sum(N),
    Pourcent = round(100 * N / Total, 1)  # % arrondi à 1 décimale
  )

plot_ly(
  data = df_plot,
  x = ~Critere,
  y = ~N,
  color = ~Note,
  colors = "RdYlGn",
  type = "bar",
  text = ~paste(
    "Critère :", Critere,
    "<br>Note :", Note,
    "<br>Réponses :", N,
    "<br>Pourcentage :", Pourcent, "%"
  ),
  hoverinfo = "text",
  textposition = "none"
) %>%
  layout(
    barmode = "stack",
    title = list(
      text = "Selon vous, la zone d’activité de Marticot est caractérisée par",
      x = 0.5,
      font = list(color = "red", size = 14)
    ),
    xaxis = list(title = "", tickangle = 20),
    yaxis = list(title = "Nombre de réponses"),
    legend = list(
      title = list(text = "Note"),
      orientation = "h",   # légende horizontale
      x = 0.5,             # centrée
      y = -0.35,            # sous le graphique
      xanchor = "center"   # ancrage centré
    ),
    autosize = TRUE
  ) %>%
  config(responsive = TRUE)


```

## Column { expandable="false" }
```{=html}
Nous pouvons voir ici au travers des réponses qu'il manque d'espace de convivialité et que les services proposés dans la ZAE tels que les équipements sportifs, les supermarchés ou une enseigne de restauration sont absents.
```

## Row {height="30%"}
```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

library(dplyr)
library(tidyr)
library(ggplot2)

# On sélectionne uniquement les colonnes qui t'intéressent
aspect_notes <- donnees %>%
  select(
    `Dans quelle mesure trouvez-vous la zone d’activité de Marticot :  Donnez une note de 1 à 6, 1 correspondant à « moche » et 6 « esthétique »  [Votre choix]` 
  ) %>%
  pivot_longer(cols = everything(), names_to = "Critere", values_to = "Note") %>%
  filter(!is.na(Note))   # supprimer les NA

# Compter le nombre de réponses par critère et par note
df_plot <- aspect_notes %>%
  group_by(Critere, Note) %>%
  summarise(N = n(), .groups = "drop")%>%
  mutate(Critere = " ")

# Graphique : barres empilées
ggplot(df_plot, aes(x = Critere, y = N, fill = factor(Note))) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_brewer(palette = "RdYlGn", direction = 1,
                     labels = c(
                      "1 = Moche",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6 = Esthétique"
                      )
                    ) +
  geom_text(aes(label = N), 
            position = position_stack(vjust = 0.5), 
            color = "black", size = 1) +
  labs(
    title = "Aspect visuel",
    x = NULL,
    y = "Nombre de réponses",
    fill = "Note"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(color = "red", size = 4, face = "bold", hjust = 0.5),
        axis.text.x = element_text( hjust = 0.5, size = 4),
        axis.title.x = element_blank(),  # Titre axe X
        axis.title.y = element_text(size = 4),  # Titre axe Y
        axis.text.y = element_text(size = 4),     # Valeurs axe Y
        legend.text = element_text(size = 3),        # Taille du texte de la légende
        legend.title = element_text(size = 4),        # Taille du titre de la légende
        legend.key.size = unit(0.3, "cm"),        # Taille des cases de la légende
        legend.spacing.y = unit(0.1, "cm")        # Espacement vertical réduit
        )
```

```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

library(dplyr)
library(tidyr)
library(ggplot2)

# On sélectionne uniquement les colonnes qui t'intéressent
espaces_verts_notes <- donnees %>%
  select(
    `Dans quelle mesure êtes-vous attaché(e) aux espaces verts présents sur la zone d’activités de Marticot ?  Donnez une note de 1 à 6, 1 correspondant à « pas du tout attaché » et 6 « très attaché »  [Votre choix]` 
  ) %>%
  pivot_longer(cols = everything(), names_to = "Critere", values_to = "Note") %>%
  filter(!is.na(Note))   # supprimer les NA

# Compter le nombre de réponses par critère et par note
df_plot <- espaces_verts_notes %>%
  group_by(Critere, Note) %>%
  summarise(N = n(), .groups = "drop")%>%
  mutate(Critere = " ")

# Graphique : barres empilées
ggplot(df_plot, aes(x = Critere, y = N, fill = factor(Note))) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_brewer(palette = "RdYlGn", direction = 1,
                     labels = c(
                      "1 = pas du tout",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6 = tout à fait"
                      )
                    ) +
  geom_text(aes(label = N), 
            position = position_stack(vjust = 0.5), 
            color = "black", size = 1) +
  labs(
    title = "Etes-vous attaché(e) aux espaces verts présents sur la zone d’activités de Marticot ?",
    x = NULL,
    y = "Nombre de réponses",
    fill = "Note"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(color = "red", size = 4, face = "bold", hjust = 0.5),
        axis.text.x = element_text( hjust = 0.5, size = 4),
        axis.title.x = element_blank(),  # Titre axe X
        axis.title.y = element_text(size = 4),  # Titre axe Y
        axis.text.y = element_text(size = 4),     # Valeurs axe Y
        legend.text = element_text(size = 3),        # Taille du texte de la légende
        legend.title = element_text(size = 4),        # Taille du titre de la légende
        legend.key.size = unit(0.3, "cm"),        # Taille des cases de la légende
        legend.spacing.y = unit(0.1, "cm")        # Espacement vertical réduit
        )
```

## Row {height="30%"}

```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

library(dplyr)
library(tidyr)
library(ggplot2)

# On sélectionne uniquement les colonnes qui t'intéressent
batiments_notes <- donnees %>%
  select(
    `Comment jugez-vous l’état général des bâtiments de la zone d’activité de Marticot ?Donnez une note en cochant de 1 à 6, 1 correspondant à « très mauvais » et 6 « très bon » [Votre choix]`
  ) %>%
  pivot_longer(cols = everything(), names_to = "Critere", values_to = "Note") %>%
  filter(!is.na(Note))   # supprimer les NA

# Compter le nombre de réponses par critère et par note
df_plot <- batiments_notes %>%
  group_by(Critere, Note) %>%
  summarise(N = n(), .groups = "drop")%>%
  mutate(Critere = " ")

# Graphique : barres empilées
ggplot(df_plot, aes(x = Critere, y = N, fill = factor(Note))) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_brewer(palette = "Dark2", direction = 1,
                     labels = c(
                      "1 = très mauvais",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6 = très bon"
                      )
                    ) +
  geom_text(aes(label = N), 
            position = position_stack(vjust = 0.5), 
            color = "black", size = 1) +
  labs(
    title = "Comment jugez-vous l’état général des bâtiments ?",
    x = NULL,
    y = "Nombre de réponses",
    fill = "Note"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(color = "red", size = 4, face = "bold", hjust = 0.5),
        axis.text.x = element_text( hjust = 0.5, size = 4),
        axis.title.x = element_blank(),  # Titre axe X
        axis.title.y = element_text(size = 4),  # Titre axe Y
        axis.text.y = element_text(size = 4),     # Valeurs axe Y
        legend.text = element_text(size = 3),        # Taille du texte de la légende
        legend.title = element_text(size = 4),        # Taille du titre de la légende
        legend.key.size = unit(0.3, "cm"),        # Taille des cases de la légende
        legend.spacing.y = unit(0.1, "cm")        # Espacement vertical réduit
        )
```

```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

library(dplyr)
library(tidyr)
library(ggplot2)

# On sélectionne uniquement les colonnes qui t'intéressent
friches_notes <- donnees %>%
  select(
    `Avez-vous remarqué la présence de friches (terrain ou local abandonnés de longue date) ou de locaux vacants sur la zone d’activité de Marticot?  Veuillez choisir une seule réponse`
  ) %>%
  pivot_longer(cols = everything(), names_to = "Critere", values_to = "Note") %>%
  filter(!is.na(Note))   # supprimer les NA

# Compter le nombre de réponses par critère et par note
df_plot <- friches_notes %>%
  group_by(Critere, Note) %>%
  summarise(N = n(), .groups = "drop")%>%
  mutate(Critere = " ")

# Graphique : barres empilées
ggplot(df_plot, aes(x = Critere, y = N, fill = factor(Note))) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_brewer(palette = "Set2", direction = 1) +
  geom_text(aes(label = N), 
            position = position_stack(vjust = 0.5), 
            color = "black", size = 1) +
  labs(
    title = "Présence de friches ou de locaux vacants ?",
    x = NULL,
    y = "Nombre de réponses",
    fill = "Note"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(color = "red", size = 4, face = "bold", hjust = 0.5),
        axis.text.x = element_text( hjust = 0.5, size = 4),
        axis.title.x = element_blank(),  # Titre axe X
        axis.title.y = element_text(size = 4),  # Titre axe Y
        axis.text.y = element_text(size = 4),     # Valeurs axe Y
        legend.text = element_text(size = 3),        # Taille du texte de la légende
        legend.title = element_text(size = 4),        # Taille du titre de la légende
        legend.key.size = unit(0.3, "cm"),        # Taille des cases de la légende
        legend.spacing.y = unit(0.1, "cm")        # Espacement vertical réduit
        )
```

## Row {height="30%"}

```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

library(dplyr)
library(tidyr)
library(ggplot2)
#library(plotly)

# On sélectionne uniquement les colonnes qui t'intéressent
caracterisation_notes <- donnees %>%
  select(
    "Plus verte" = `Si la zone d’activité de Marticot devait évoluer (attention il n’y a aucun projet prévu, cette question vise uniquement à comprendre comment des salariés se projetteraient vers une éventuelle évolution), pour vous elle devrait être :1 correspondant à « pas du tout » et 6 « tout à fait » [Plus verte]`,
    "Plus accessible"= `Si la zone d’activité de Marticot devait évoluer (attention il n’y a aucun projet prévu, cette question vise uniquement à comprendre comment des salariés se projetteraient vers une éventuelle évolution), pour vous elle devrait être :1 correspondant à « pas du tout » et 6 « tout à fait » [Plus accessible]`,
    "Plus dense" = `Si la zone d’activité de Marticot devait évoluer (attention il n’y a aucun projet prévu, cette question vise uniquement à comprendre comment des salariés se projetteraient vers une éventuelle évolution), pour vous elle devrait être :1 correspondant à « pas du tout » et 6 « tout à fait » [Plus dense]`,
    "Plus accessible à pied" = `Si la zone d’activité de Marticot devait évoluer (attention il n’y a aucun projet prévu, cette question vise uniquement à comprendre comment des salariés se projetteraient vers une éventuelle évolution), pour vous elle devrait être :1 correspondant à « pas du tout » et 6 « tout à fait » [Plus accessible à pied]`,
    "Mieux desservie" = `Si la zone d’activité de Marticot devait évoluer (attention il n’y a aucun projet prévu, cette question vise uniquement à comprendre comment des salariés se projetteraient vers une éventuelle évolution), pour vous elle devrait être :1 correspondant à « pas du tout » et 6 « tout à fait » [Mieux desservie]`,
    "Accueillir des services qui seraient utiles à tous" = `Si la zone d’activité de Marticot devait évoluer (attention il n’y a aucun projet prévu, cette question vise uniquement à comprendre comment des salariés se projetteraient vers une éventuelle évolution), pour vous elle devrait être :1 correspondant à « pas du tout » et 6 « tout à fait » [Accueillir des services qui  seraient utiles à tous]`,
    "Accueillir des services qui vous seraient utiles à vous" = `Si la zone d’activité de Marticot devait évoluer (attention il n’y a aucun projet prévu, cette question vise uniquement à comprendre comment des salariés se projetteraient vers une éventuelle évolution), pour vous elle devrait être :1 correspondant à « pas du tout » et 6 « tout à fait » [Accueillir des services qui vous seraient utiles à vous]`
    
    
  ) %>%
  pivot_longer(cols = everything(), names_to = "Critere", values_to = "Note") %>%
  filter(!is.na(Note))   # supprimer les NA

# Compter le nombre de réponses par critère et par note
df_plot <- caracterisation_notes %>%
  group_by(Critere, Note) %>%
  summarise(N = n(), .groups = "drop")

# Graphique : barres empilées
ggplot(df_plot, aes(x = Critere, y = N, fill = factor(Note))) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_brewer(palette = "RdYlGn", direction = 1) +
  geom_text(aes(label = N), 
            position = position_stack(vjust = 0.5), 
            color = "black", size = 1) +
  labs(
    title = "Selon vous, la zone d’activité de Marticot est caractérisée par",
    x = "",
    y = "Nombre de réponses",
    fill = "Note"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(color = "red", size = 4, face = "bold", hjust = 0.5),
        axis.text.x = element_text( hjust = 0.5, size = 4, angle = 20),
        axis.title.x = element_text(size = 2),  # Titre axe X
        axis.title.y = element_text(size = 4),  # Titre axe Y
        axis.text.y = element_text(size = 4),     # Valeurs axe Y
        legend.text = element_text(size = 3),        # Taille du texte de la légende
        legend.title = element_text(size = 4),        # Taille du titre de la légende
        legend.key.size = unit(0.3, "cm"),        # Taille des cases de la légende
        legend.spacing.y = unit(0.1, "cm")        # Espacement vertical réduit
        )

```

```{r}
#| echo: false
#| fig.width: 4
#| fig.height: 2

library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)

# Colonnes des services
services_avis <- donnees %>%
  select(
    "Restauration" = `Quels services vous seraient utiles :Veuillez cocher une ou plusieurs réponses [Restauration]`,
    "Équipements sportifs" = `Quels services vous seraient utiles :Veuillez cocher une ou plusieurs réponses [Équipements sportifs]`,
    "Pôle médical ou para-médical" = `Quels services vous seraient utiles :Veuillez cocher une ou plusieurs réponses [Pôle médical ou para-médical]`,
    "Services à la personne" = `Quels services vous seraient utiles :Veuillez cocher une ou plusieurs réponses [Services à la personne (coiffeur, institut de beauté, pressing...)]`,
    "Supermarchés" = `Quels services vous seraient utiles :Veuillez cocher une ou plusieurs réponses [Supermarchés]`,
    "Système de garde d’enfants collectif" = `Quels services vous seraient utiles :Veuillez cocher une ou plusieurs réponses [Système de garde d’enfants collectif]`
  ) %>%
  pivot_longer(cols = everything(), names_to = "Service", values_to = "Reponse")

# Comptage uniquement des "Oui"
df_plot <- services_avis %>%
  filter(Reponse == "Oui") %>%
  group_by(Service) %>%
  summarise(N = n(), .groups = "drop")

# Graphique ggplot
p <- ggplot(df_plot, aes(x = reorder(Service, N), y = N, fill = Service,
                         text = paste("Service:", Service, "<br>Réponses:", N))) +
  geom_col(show.legend = FALSE) +   # enlève la légende
  labs(
    title = "Quels services vous seraient utiles",
    x = "",
    y = "Nombre de personnes"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(color = "red", size = 10, face = "bold", hjust = 0.5),
    axis.text.x = element_text(angle = 25, hjust = 1, size = 8),
    axis.title.x = element_blank(),
    axis.title.y = element_text(size = 9),
    axis.text.y = element_text(size = 8),
    legend.position = "none"   # supprime totalement la légende
  )

# Graphique interactif
ggplotly(p, tooltip = "text")
```